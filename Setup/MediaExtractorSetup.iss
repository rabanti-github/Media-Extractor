; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Media Extractor"
;#define MyAppVersion "1.8"
;#define MyAppVersion ReadIni(SourcePath + "\vars\config.ini", "General", "Version")
;#define MyAppURL "https://github.com/rabanti-github/Media-Extractor"
;#define MyAppExeName "MediaExtractor.exe"

[Code]
var
  NextButtonCaption: String;
procedure InitializeWizard();
begin
  // Hide radio buttons and pre-select "accept", to enable "next" button
  WizardForm.LicenseAcceptedRadio.Checked := True;
  WizardForm.LicenseAcceptedRadio.Visible := False;
  WizardForm.LicenseNotAcceptedRadio.Visible := False;
  WizardForm.LicenseMemo.Height :=
    WizardForm.LicenseNotAcceptedRadio.Top +
    WizardForm.LicenseNotAcceptedRadio.Height -
    WizardForm.LicenseMemo.Top - ScaleY(5);
end;

procedure CurPageChanged(CurPageID: Integer);
begin
  if CurPageID = wpLicense then
  begin
    case ActiveLanguage of
    // TODO: Add more languages if implemented 
      'english': NextButtonCaption  := '&I agree';
      'german': NextButtonCaption  := '&Ich stimme zu';
      'french': NextButtonCaption  := '&J''accepte';
      else
        NextButtonCaption  := '&I agree'; // Default to English
      end;
        WizardForm.NextButton.Caption := NextButtonCaption;
  end;
end;

function GetAppVersion(Param: string): string;
var
  IniPath: string;
begin
  IniPath := ExpandConstant('{#SourcePath}vars\config.ini');
  Result := GetIniString('Application', 'Version', 'x.x', IniPath);
end;

function GetAppUrl(Param: string): string;
var
  IniPath: string;
begin
  IniPath := ExpandConstant('{#SourcePath}vars\config.ini');
  Result := GetIniString('Web', 'Website', '---', IniPath);
end;

function GetSupportUrl(Param: string): string;
var
  IniPath: string;
begin
  IniPath := ExpandConstant('{#SourcePath}vars\config.ini');
  Result := GetIniString('Web', 'Support', '---', IniPath);
end;

function GetAssemblyPath(Param: string): string;
var
  IniPath: string;
begin
  IniPath := ExpandConstant('{#SourcePath}vars\config.ini');
  Result := GetIniString('Assembly', 'Path', '', IniPath);
end;

function GetExecutable(Param: string): string;
var
  IniPath: string;
begin
  IniPath := ExpandConstant('{#SourcePath}vars\config.ini');
  Result := GetIniString('Assembly', 'Executable', 'MediaExtractor.exe', IniPath);
end;

function GetFullAssemblyPath(Param: string): string;
begin
  // Call your functions to get the paths and combine them
  Result := GetAssemblyPath + GetExecutable;
end;

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{D1DF90C3-1CE8-4D17-9A39-C1D1568D508F}
AppName={#MyAppName}
;AppVersion={#MyAppVersion}
AppVersion={code:GetAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisherURL={code:GetAppUrl}
AppSupportURL={code:GetSupportUrl}
AppUpdatesURL={code:GetAppUrl}
DefaultDirName={autopf}\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
LicenseFile=D:\Dev\NET\Media-Extractor\resources\MIT-License.rtf
; Uncomment the following line to run in non administrative install mode (install for current user only.)
PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=dialog
OutputBaseFilename=MediaExtractorSetup
SetupIconFile=D:\Dev\NET\Media-Extractor\resources\media_extractor.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"
Name: "german"; MessagesFile: "compiler:Languages\German.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "{code:GetFullAssemblyPath}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{code:GetAssemblyPath}*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{code:GetExecutable}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{group}\changelog.txt"; Filename: "{app}\changelog.txt"
Name: "{group}\Project Website"; Filename: "{code:GetAppUrl}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{code:GetExecutable}"; Tasks: desktopicon

[Run]
Filename: "{app}\{code:GetExecutable}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

