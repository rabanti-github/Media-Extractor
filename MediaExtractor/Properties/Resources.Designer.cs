//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MediaExtractor.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MediaExtractor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Author ähnelt.
        /// </summary>
        public static string AboutAuthor {
            get {
                return ResourceManager.GetString("AboutAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close ähnelt.
        /// </summary>
        public static string AboutCloseButton {
            get {
                return ResourceManager.GetString("AboutCloseButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Date ähnelt.
        /// </summary>
        public static string AboutDate {
            get {
                return ResourceManager.GetString("AboutDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Media Extractor is an application to preview and extract packed media in Microsoft Office files (e.g. Word, PowerPoint or Excel documents) or common archives (e.g. zip, 7z or tar) ähnelt.
        /// </summary>
        public static string AboutDescription {
            get {
                return ResourceManager.GetString("AboutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About Media-Extractor ähnelt.
        /// </summary>
        public static string AboutHeader {
            get {
                return ResourceManager.GetString("AboutHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License ähnelt.
        /// </summary>
        public static string AboutLicense {
            get {
                return ResourceManager.GetString("AboutLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version ähnelt.
        /// </summary>
        public static string AboutVersion {
            get {
                return ResourceManager.GetString("AboutVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Website ähnelt.
        /// </summary>
        public static string AboutWebsite {
            get {
                return ResourceManager.GetString("AboutWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Document ähnelt.
        /// </summary>
        public static string ButtonOpen {
            get {
                return ResourceManager.GetString("ButtonOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save File(s) ähnelt.
        /// </summary>
        public static string ButtonSave {
            get {
                return ResourceManager.GetString("ButtonSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save all Files ähnelt.
        /// </summary>
        public static string ButtonSaveAll {
            get {
                return ResourceManager.GetString("ButtonSaveAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save selected File(s) ähnelt.
        /// </summary>
        public static string ButtonSaveSelected {
            get {
                return ResourceManager.GetString("ButtonSaveSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CRC32 (cyclic redundancy check) is a simple hashing method to compare whether data or files are identical. However, CRC does not provide a 100% guarantee that two files are identical. But it is a strong evidence if the size of both files are identical and no malicious tampering is to be expected. ähnelt.
        /// </summary>
        public static string CrcDescription {
            get {
                return ResourceManager.GetString("CrcDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel Extraction ähnelt.
        /// </summary>
        public static string DialogButtonCancel {
            get {
                return ResourceManager.GetString("DialogButtonCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel the extraction ähnelt.
        /// </summary>
        public static string DialogButtonCancelTooltip {
            get {
                return ResourceManager.GetString("DialogButtonCancelTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overwrite ähnelt.
        /// </summary>
        public static string DialogButtonOverwrite {
            get {
                return ResourceManager.GetString("DialogButtonOverwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace the existing file ähnelt.
        /// </summary>
        public static string DialogButtonOverwriteTooltip {
            get {
                return ResourceManager.GetString("DialogButtonOverwriteTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename ähnelt.
        /// </summary>
        public static string DialogButtonRename {
            get {
                return ResourceManager.GetString("DialogButtonRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename the new file ähnelt.
        /// </summary>
        public static string DialogButtonRenameTooltip {
            get {
                return ResourceManager.GetString("DialogButtonRenameTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Skip ähnelt.
        /// </summary>
        public static string DialogButtonSkip {
            get {
                return ResourceManager.GetString("DialogButtonSkip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Skip the extraction of the file ähnelt.
        /// </summary>
        public static string DialogButtonSkipTooltip {
            get {
                return ResourceManager.GetString("DialogButtonSkipTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Canceled ähnelt.
        /// </summary>
        public static string DialogCancelTitle {
            get {
                return ResourceManager.GetString("DialogCancelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string DialogErrorTitle {
            get {
                return ResourceManager.GetString("DialogErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The path &apos;{0}&apos; could not be opened ähnelt.
        /// </summary>
        public static string DialogExplorerError {
            get {
                return ResourceManager.GetString("DialogExplorerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File already exists... ähnelt.
        /// </summary>
        public static string DialogHeader {
            get {
                return ResourceManager.GetString("DialogHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred during the retrieval of the file extensions for the previews. The default values are restored ähnelt.
        /// </summary>
        public static string DialogInvalidExtensions {
            get {
                return ResourceManager.GetString("DialogInvalidExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CRC32: ähnelt.
        /// </summary>
        public static string DialogLabelCrc {
            get {
                return ResourceManager.GetString("DialogLabelCrc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Date: ähnelt.
        /// </summary>
        public static string DialogLabelDate {
            get {
                return ResourceManager.GetString("DialogLabelDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Existing File ähnelt.
        /// </summary>
        public static string DialogLabelExisting {
            get {
                return ResourceManager.GetString("DialogLabelExisting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name: ähnelt.
        /// </summary>
        public static string DialogLabelName {
            get {
                return ResourceManager.GetString("DialogLabelName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New File to Extract ähnelt.
        /// </summary>
        public static string DialogLabelNew {
            get {
                return ResourceManager.GetString("DialogLabelNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size: ähnelt.
        /// </summary>
        public static string DialogLabelSize {
            get {
                return ResourceManager.GetString("DialogLabelSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The file could not be loaded.\n{0}\nError Message: {1} ähnelt.
        /// </summary>
        public static string DialogLoadFailure {
            get {
                return ResourceManager.GetString("DialogLoadFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Office Formats|*.docx;*.dotx;*.docm;*.dotm;*.xlsx;*.xlsm;*.xlsb;*.xltx;*.xltm;*.pptx;*.pptm;*.potx;*.potm;*.ppsx;*.ppsm|Word documents|*.docx;*.dotx;*.docm;*.dotm|Excel documents|*.xlsx;*.xlsm;*.xlsb;*.xltx;*.xltm|PowerPoint documents|*.pptx;*.pptm;*.potx;*.potm;*.ppsx;*.ppsm|Common Archive Formats|*.zip;*.7z;*.rar;*.bzip2,*.gz;*.tar;*.cab;*.chm;*.lzh;*.iso|All files|*.* ähnelt.
        /// </summary>
        public static string DialogLoadFilter {
            get {
                return ResourceManager.GetString("DialogLoadFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Office Document... ähnelt.
        /// </summary>
        public static string DialogLoadTitle {
            get {
                return ResourceManager.GetString("DialogLoadTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The change log &apos;{0}&apos; was not found. ähnelt.
        /// </summary>
        public static string DialogMissingChangelog {
            get {
                return ResourceManager.GetString("DialogMissingChangelog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changelog not found ähnelt.
        /// </summary>
        public static string DialogMissingChangelogTitle {
            get {
                return ResourceManager.GetString("DialogMissingChangelogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The license file &apos;{0}&apos; was not found. ähnelt.
        /// </summary>
        public static string DialogMissingLicense {
            get {
                return ResourceManager.GetString("DialogMissingLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License could not be found ähnelt.
        /// </summary>
        public static string DialogMissingLicenseTitle {
            get {
                return ResourceManager.GetString("DialogMissingLicenseTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The file was not found:\n{0}\nShould the entry be removed from the recent file list? ähnelt.
        /// </summary>
        public static string DialogMissingRecentFile {
            get {
                return ResourceManager.GetString("DialogMissingRecentFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The project website could not be loaded ähnelt.
        /// </summary>
        public static string DialogMissingWebsite {
            get {
                return ResourceManager.GetString("DialogMissingWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project website not loaded ähnelt.
        /// </summary>
        public static string DialogMissingWebsiteTitle {
            get {
                return ResourceManager.GetString("DialogMissingWebsiteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remember Decision ähnelt.
        /// </summary>
        public static string DialogRememberCheckbox {
            get {
                return ResourceManager.GetString("DialogRememberCheckbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a Folder to save all Files... ähnelt.
        /// </summary>
        public static string DialogSaveAllTitle {
            get {
                return ResourceManager.GetString("DialogSaveAllTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save current File as... ähnelt.
        /// </summary>
        public static string DialogSaveCurrentTitle {
            get {
                return ResourceManager.GetString("DialogSaveCurrentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not all files were extracted ähnelt.
        /// </summary>
        public static string DialogSaveErrors {
            get {
                return ResourceManager.GetString("DialogSaveErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The file could not be saved ähnelt.
        /// </summary>
        public static string DialogSaveFailure {
            get {
                return ResourceManager.GetString("DialogSaveFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All files|*.* ähnelt.
        /// </summary>
        public static string DialogSaveFilter {
            get {
                return ResourceManager.GetString("DialogSaveFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a Folder to save the selected Files... ähnelt.
        /// </summary>
        public static string DialogSaveSelectedTitle {
            get {
                return ResourceManager.GetString("DialogSaveSelectedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The preview of a large file (&gt; {0}) is attempted.\nThis process may take a long time.\nShall the preview be created? ähnelt.
        /// </summary>
        public static string DialogSizeWarning {
            get {
                return ResourceManager.GetString("DialogSizeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attempt to preview a large File... ähnelt.
        /// </summary>
        public static string DialogSizeWarningTitle {
            get {
                return ResourceManager.GetString("DialogSizeWarningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There was an unexpected error during the extraction: ähnelt.
        /// </summary>
        public static string DialogUnexpectedError {
            get {
                return ResourceManager.GetString("DialogUnexpectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Drop Document here ähnelt.
        /// </summary>
        public static string DropAreaWatermark {
            get {
                return ResourceManager.GetString("DropAreaWatermark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Embedded Files ähnelt.
        /// </summary>
        public static string LabelListview {
            get {
                return ResourceManager.GetString("LabelListview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preview ähnelt.
        /// </summary>
        public static string LabelPreview {
            get {
                return ResourceManager.GetString("LabelPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ext. ähnelt.
        /// </summary>
        public static string ListViewColumnExtension {
            get {
                return ResourceManager.GetString("ListViewColumnExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Filename (Embedded) ähnelt.
        /// </summary>
        public static string ListViewColumnName {
            get {
                return ResourceManager.GetString("ListViewColumnName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Relative Path ähnelt.
        /// </summary>
        public static string ListViewColumnPath {
            get {
                return ResourceManager.GetString("ListViewColumnPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size ähnelt.
        /// </summary>
        public static string ListViewColumnSize {
            get {
                return ResourceManager.GetString("ListViewColumnSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Appearance ähnelt.
        /// </summary>
        public static string MenuAppearance {
            get {
                return ResourceManager.GetString("MenuAppearance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dark Mode ähnelt.
        /// </summary>
        public static string MenuAppearanceDarkmode {
            get {
                return ResourceManager.GetString("MenuAppearanceDarkmode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language ähnelt.
        /// </summary>
        public static string MenuAppearanceLanguage {
            get {
                return ResourceManager.GetString("MenuAppearanceLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die System Language (Default) ähnelt.
        /// </summary>
        public static string MenuAppearanceLanguageDefault {
            get {
                return ResourceManager.GetString("MenuAppearanceLanguageDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die English ähnelt.
        /// </summary>
        public static string MenuAppearanceLanguageEnglish {
            get {
                return ResourceManager.GetString("MenuAppearanceLanguageEnglish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Français (French) ähnelt.
        /// </summary>
        public static string MenuAppearanceLanguageFrench {
            get {
                return ResourceManager.GetString("MenuAppearanceLanguageFrench", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deutsch (German) ähnelt.
        /// </summary>
        public static string MenuAppearanceLanguageGerman {
            get {
                return ResourceManager.GetString("MenuAppearanceLanguageGerman", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Japanese (日本語) ähnelt.
        /// </summary>
        public static string MenuAppearanceLanguageJapanese {
            get {
                return ResourceManager.GetString("MenuAppearanceLanguageJapanese", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Español (Spanish) ähnelt.
        /// </summary>
        public static string MenuAppearanceLanguageSpanish {
            get {
                return ResourceManager.GetString("MenuAppearanceLanguageSpanish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Document ähnelt.
        /// </summary>
        public static string MenuDocument {
            get {
                return ResourceManager.GetString("MenuDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text Preview on unknown File Formats ähnelt.
        /// </summary>
        public static string MenuDocumentGenerictextPreview {
            get {
                return ResourceManager.GetString("MenuDocumentGenerictextPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keep Folder Structure when Extracting ähnelt.
        /// </summary>
        public static string MenuDocumentKeepStructure {
            get {
                return ResourceManager.GetString("MenuDocumentKeepStructure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show in Explorer after Extracting ähnelt.
        /// </summary>
        public static string MenuDocumentOpenExplorer {
            get {
                return ResourceManager.GetString("MenuDocumentOpenExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show embedded Image Files ähnelt.
        /// </summary>
        public static string MenuDocumentShowImages {
            get {
                return ResourceManager.GetString("MenuDocumentShowImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show other embedded Files ähnelt.
        /// </summary>
        public static string MenuDocumentShowOther {
            get {
                return ResourceManager.GetString("MenuDocumentShowOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show Warning for Preview of large Files ähnelt.
        /// </summary>
        public static string MenuDocumentSizeWarning {
            get {
                return ResourceManager.GetString("MenuDocumentSizeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File ähnelt.
        /// </summary>
        public static string MenuFile {
            get {
                return ResourceManager.GetString("MenuFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear List ähnelt.
        /// </summary>
        public static string MenuFileClearRecent {
            get {
                return ResourceManager.GetString("MenuFileClearRecent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Document ähnelt.
        /// </summary>
        public static string MenuFileOpen {
            get {
                return ResourceManager.GetString("MenuFileOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quit ähnelt.
        /// </summary>
        public static string MenuFileQuit {
            get {
                return ResourceManager.GetString("MenuFileQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recent Files ähnelt.
        /// </summary>
        public static string MenuFileRecent {
            get {
                return ResourceManager.GetString("MenuFileRecent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save all Files ähnelt.
        /// </summary>
        public static string MenuFileSaveAll {
            get {
                return ResourceManager.GetString("MenuFileSaveAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save selected File(s) ähnelt.
        /// </summary>
        public static string MenuFileSaveSelected {
            get {
                return ResourceManager.GetString("MenuFileSaveSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Help ähnelt.
        /// </summary>
        public static string MenuHelp {
            get {
                return ResourceManager.GetString("MenuHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About ähnelt.
        /// </summary>
        public static string MenuHelpAbout {
            get {
                return ResourceManager.GetString("MenuHelpAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change Log ähnelt.
        /// </summary>
        public static string MenuHelpChangeLog {
            get {
                return ResourceManager.GetString("MenuHelpChangeLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License ähnelt.
        /// </summary>
        public static string MenuHelpLicense {
            get {
                return ResourceManager.GetString("MenuHelpLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project Website ähnelt.
        /// </summary>
        public static string MenuHelpWebsite {
            get {
                return ResourceManager.GetString("MenuHelpWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} loaded ähnelt.
        /// </summary>
        public static string StatusEmbeddedLoaded {
            get {
                return ResourceManager.GetString("StatusEmbeddedLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File loaded: {0} ähnelt.
        /// </summary>
        public static string StatusLoaded {
            get {
                return ResourceManager.GetString("StatusLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Embedded file could not be loaded: {0} ähnelt.
        /// </summary>
        public static string StatusLoadEmbeddedImageFailure {
            get {
                return ResourceManager.GetString("StatusLoadEmbeddedImageFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The preview image for &apos;{0}&apos; could not be loaded. Displaying as text ähnelt.
        /// </summary>
        public static string StatusLoadEmbeddedImageFallback {
            get {
                return ResourceManager.GetString("StatusLoadEmbeddedImageFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preview not possible for {0} ähnelt.
        /// </summary>
        public static string StatusLoadEmbeddedOtherFailure {
            get {
                return ResourceManager.GetString("StatusLoadEmbeddedOtherFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The preview for &apos;{0}&apos; could not be loaded. Displaying as text ähnelt.
        /// </summary>
        public static string StatusLoadEmbeddedOtherFallback {
            get {
                return ResourceManager.GetString("StatusLoadEmbeddedOtherFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text / XML file could not be loaded: {0} ähnelt.
        /// </summary>
        public static string StatusLoadEmbeddedTextFailure {
            get {
                return ResourceManager.GetString("StatusLoadEmbeddedTextFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The file could not be loaded ähnelt.
        /// </summary>
        public static string StatusLoadFailure {
            get {
                return ResourceManager.GetString("StatusLoadFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading file... Please wait ähnelt.
        /// </summary>
        public static string StatusLoading {
            get {
                return ResourceManager.GetString("StatusLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading embedded file... Please wait ähnelt.
        /// </summary>
        public static string StatusLoadingEmbedded {
            get {
                return ResourceManager.GetString("StatusLoadingEmbedded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The preview of &apos;{0}&apos; was skipped (file too large) ähnelt.
        /// </summary>
        public static string StatusPreviewSkipped {
            get {
                return ResourceManager.GetString("StatusPreviewSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ready ähnelt.
        /// </summary>
        public static string StatusReady {
            get {
                return ResourceManager.GetString("StatusReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The save process was canceled ähnelt.
        /// </summary>
        public static string StatusSaveCanceled {
            get {
                return ResourceManager.GetString("StatusSaveCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} files extracted ({1} overwritten, {2} renamed), {3} skipped, {4} not extracted (errors) ähnelt.
        /// </summary>
        public static string StatusSaveErrorSummary {
            get {
                return ResourceManager.GetString("StatusSaveErrorSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not save the file: {0} ähnelt.
        /// </summary>
        public static string StatusSaveFailure {
            get {
                return ResourceManager.GetString("StatusSaveFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The file was saved as: {0} ähnelt.
        /// </summary>
        public static string StatusSaveSuccess {
            get {
                return ResourceManager.GetString("StatusSaveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} files extracted ({1} overwritten, {2} renamed), {3} skipped ähnelt.
        /// </summary>
        public static string StatusSaveSummary {
            get {
                return ResourceManager.GetString("StatusSaveSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image preview could not be created ähnelt.
        /// </summary>
        public static string TextErrorInvalidImage {
            get {
                return ResourceManager.GetString("TextErrorInvalidImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text preview could not be created ähnelt.
        /// </summary>
        public static string TextErrorInvalidText {
            get {
                return ResourceManager.GetString("TextErrorInvalidText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} files could not be extracted. ähnelt.
        /// </summary>
        public static string TextErrorMultipleFiles {
            get {
                return ResourceManager.GetString("TextErrorMultipleFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One file could not be extracted. ähnelt.
        /// </summary>
        public static string TextErrorOneFile {
            get {
                return ResourceManager.GetString("TextErrorOneFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The file may be not a valid Office file or archive. ähnelt.
        /// </summary>
        public static string TextInvalidFormat {
            get {
                return ResourceManager.GetString("TextInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It looks like the filename is not valid. Please check the file name and path. ähnelt.
        /// </summary>
        public static string TextInvalidPath {
            get {
                return ResourceManager.GetString("TextInvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please make sure that the file is not open in another application. ähnelt.
        /// </summary>
        public static string TextLockedFile {
            get {
                return ResourceManager.GetString("TextLockedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Preview ähnelt.
        /// </summary>
        public static string TextNoPreview {
            get {
                return ResourceManager.GetString("TextNoPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The path &apos;{0}&apos; could not be opened ähnelt.
        /// </summary>
        public static string TextSaveError {
            get {
                return ResourceManager.GetString("TextSaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} files were skipped. ähnelt.
        /// </summary>
        public static string TextSkippedMultipleFiles {
            get {
                return ResourceManager.GetString("TextSkippedMultipleFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One file was skipped. ähnelt.
        /// </summary>
        public static string TextSkippedOneFile {
            get {
                return ResourceManager.GetString("TextSkippedOneFile", resourceCulture);
            }
        }
    }
}
